### YamlMime:ManagedReference
items:
- uid: Yort.Humm.InStore.ProcessAuthorisationRequest
  commentId: T:Yort.Humm.InStore.ProcessAuthorisationRequest
  id: ProcessAuthorisationRequest
  parent: Yort.Humm.InStore
  children:
  - Yort.Humm.InStore.ProcessAuthorisationRequest.AutoHandlePendingResponse
  - Yort.Humm.InStore.ProcessAuthorisationRequest.BuyerConfirms
  - Yort.Humm.InStore.ProcessAuthorisationRequest.ClientTransactionReference
  - Yort.Humm.InStore.ProcessAuthorisationRequest.FinanceAmount
  - Yort.Humm.InStore.ProcessAuthorisationRequest.PreapprovalCode
  - Yort.Humm.InStore.ProcessAuthorisationRequest.PurchaseAmount
  - Yort.Humm.InStore.ProcessAuthorisationRequest.PurchaseItems
  - Yort.Humm.InStore.ProcessAuthorisationRequest.Validate
  langs:
  - csharp
  - vb
  name: ProcessAuthorisationRequest
  nameWithType: ProcessAuthorisationRequest
  fullName: Yort.Humm.InStore.ProcessAuthorisationRequest
  type: Class
  source:
    remote:
      path: C:/Projects/GitHub/Yort.Humm.InStore/src/ProcessAuthorisationRequest.cs
    id: ProcessAuthorisationRequest
    path: ProcessAuthorisationRequest.cs
    startLine: 15
  assemblies:
  - Yort.Humm.InStore
  namespace: Yort.Humm.InStore
  summary: "\nRepresents a request to generate a payment plan/contract for the specified amount using the provided pre-approval code generated by a customer&apos;s device.\n"
  example: []
  syntax:
    content: 'public sealed class ProcessAuthorisationRequest : RequestBase'
    content.vb: >-
      Public NotInheritable Class ProcessAuthorisationRequest
          Inherits RequestBase
  seealso:
  - linkId: Yort.Humm.InStore.Infrastructure.RequestBase
    commentId: T:Yort.Humm.InStore.Infrastructure.RequestBase
  - linkId: Yort.Humm.InStore.ProcessSalesAdjustmentResponse
    commentId: T:Yort.Humm.InStore.ProcessSalesAdjustmentResponse
  - linkId: Yort.Humm.InStore.HummClient.ProcessAuthorisationAsync(Yort.Humm.InStore.ProcessAuthorisationRequest)
    commentId: M:Yort.Humm.InStore.HummClient.ProcessAuthorisationAsync(Yort.Humm.InStore.ProcessAuthorisationRequest)
  inheritance:
  - System.Object
  - Yort.Humm.InStore.Infrastructure.RequestBase
  inheritedMembers:
  - Yort.Humm.InStore.Infrastructure.RequestBase.MerchantId
  - Yort.Humm.InStore.Infrastructure.RequestBase.DeviceId
  - Yort.Humm.InStore.Infrastructure.RequestBase.PosVersion
  - Yort.Humm.InStore.Infrastructure.RequestBase.OperatorId
  - Yort.Humm.InStore.Infrastructure.RequestBase.TrackingData
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Yort.Humm.InStore.ProcessAuthorisationRequest.ClientTransactionReference
  commentId: P:Yort.Humm.InStore.ProcessAuthorisationRequest.ClientTransactionReference
  id: ClientTransactionReference
  parent: Yort.Humm.InStore.ProcessAuthorisationRequest
  langs:
  - csharp
  - vb
  name: ClientTransactionReference
  nameWithType: ProcessAuthorisationRequest.ClientTransactionReference
  fullName: Yort.Humm.InStore.ProcessAuthorisationRequest.ClientTransactionReference
  type: Property
  source:
    remote:
      path: C:/Projects/GitHub/Yort.Humm.InStore/src/ProcessAuthorisationRequest.cs
    id: ClientTransactionReference
    path: ProcessAuthorisationRequest.cs
    startLine: 33
  assemblies:
  - Yort.Humm.InStore
  namespace: Yort.Humm.InStore
  summary: "\nRequired. Gets or sets the unique client transaction reference.\n"
  remarks: "\n<p>This value should be unique and re-used on repeat calls for the same payment (in case of network/timeout errors etc) to ensure idempotency (and avoid duplicate procesing).</p>\n<p>If the value used here a temporary value not associated with the invoice/receipt/transaction document generated by the POS, a subsequent <xref href=\"Yort.Humm.InStore.SendReceiptRequest\" data-throw-if-not-resolved=\"false\"></xref> can be made to update the created payment plan/contract with the final POS transaction reference.</p>\n<p>If the <xref href=\"Yort.Humm.InStore.ProcessAuthorisationRequest.BuyerConfirms\" data-throw-if-not-resolved=\"false\"></xref> property is true then a &apos;big things&apos; flow may occur which could take extra processing time. In this case one or more responses with a status of <xref href=\"Yort.Humm.InStore.RequestStates.Pending\" data-throw-if-not-resolved=\"false\"></xref> may be received \nand require the request to be resent at a specified interval. The application code can choose to handle this itself, or set the <xref href=\"Yort.Humm.InStore.ProcessAuthorisationRequest.AutoHandlePendingResponse\" data-throw-if-not-resolved=\"false\"></xref> property to true. In that case the \nlibrary will automatically take care of handling the pending response, waiting the specified interval, an retrying the request until a final status is arrived at. The <xref href=\"Yort.Humm.InStore.HummClient.PendingAuthorisation\" data-throw-if-not-resolved=\"false\"></xref>\ncan be used in this flow for logging and updating the POS UI to keep the operator informed of progress. The event is not used if <xref href=\"Yort.Humm.InStore.ProcessAuthorisationRequest.AutoHandlePendingResponse\" data-throw-if-not-resolved=\"false\"></xref> is false (or a pending status response is not received).\n<p>Maximum length of 64 characters.</p>\n</p>\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("x_pos_transaction_ref")]

      public string ClientTransactionReference { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe unique client transaction reference.\n"
    content.vb: >-
      <JsonProperty("x_pos_transaction_ref")>

      Public Property ClientTransactionReference As String
  overload: Yort.Humm.InStore.ProcessAuthorisationRequest.ClientTransactionReference*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: x_pos_transaction_ref
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.Humm.InStore.ProcessAuthorisationRequest.PreapprovalCode
  commentId: P:Yort.Humm.InStore.ProcessAuthorisationRequest.PreapprovalCode
  id: PreapprovalCode
  parent: Yort.Humm.InStore.ProcessAuthorisationRequest
  langs:
  - csharp
  - vb
  name: PreapprovalCode
  nameWithType: ProcessAuthorisationRequest.PreapprovalCode
  fullName: Yort.Humm.InStore.ProcessAuthorisationRequest.PreapprovalCode
  type: Property
  source:
    remote:
      path: C:/Projects/GitHub/Yort.Humm.InStore/src/ProcessAuthorisationRequest.cs
    id: PreapprovalCode
    path: ProcessAuthorisationRequest.cs
    startLine: 44
  assemblies:
  - Yort.Humm.InStore
  namespace: Yort.Humm.InStore
  summary: "\nRequired. Gets or sets the preapproval code generated by the customer&apos;s device. Normally scanned as a barcode, or entered via keyboard if neccesary.\n"
  remarks: "\n<p>Minimum length of 6 digits, maximum length of 10.</p>\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("x_pre_approval_code")]

      public string PreapprovalCode { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nA string containing the preapproval code.\n"
    content.vb: >-
      <JsonProperty("x_pre_approval_code")>

      Public Property PreapprovalCode As String
  overload: Yort.Humm.InStore.ProcessAuthorisationRequest.PreapprovalCode*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: x_pre_approval_code
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.Humm.InStore.ProcessAuthorisationRequest.FinanceAmount
  commentId: P:Yort.Humm.InStore.ProcessAuthorisationRequest.FinanceAmount
  id: FinanceAmount
  parent: Yort.Humm.InStore.ProcessAuthorisationRequest
  langs:
  - csharp
  - vb
  name: FinanceAmount
  nameWithType: ProcessAuthorisationRequest.FinanceAmount
  fullName: Yort.Humm.InStore.ProcessAuthorisationRequest.FinanceAmount
  type: Property
  source:
    remote:
      path: C:/Projects/GitHub/Yort.Humm.InStore/src/ProcessAuthorisationRequest.cs
    id: FinanceAmount
    path: ProcessAuthorisationRequest.cs
    startLine: 56
  assemblies:
  - Yort.Humm.InStore
  namespace: Yort.Humm.InStore
  summary: "\nRequired. Gets or sets the dollvar value the customer wants to pay via Humm.\n"
  remarks: "\n<p>Although the Humm API requires this value to be sent as a number of cents, this library uses a dollar value and will perform the conversion to cents for you.\nFor example, to send $119.50 set this value to 119.5.</p>\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("x_finance_amount")]

      public decimal FinanceAmount { get; set; }
    parameters: []
    return:
      type: System.Decimal
      description: "\nThe finance amount as a dollar value in decimal format.\n"
    content.vb: >-
      <JsonProperty("x_finance_amount")>

      Public Property FinanceAmount As Decimal
  overload: Yort.Humm.InStore.ProcessAuthorisationRequest.FinanceAmount*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: x_finance_amount
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.Humm.InStore.ProcessAuthorisationRequest.PurchaseAmount
  commentId: P:Yort.Humm.InStore.ProcessAuthorisationRequest.PurchaseAmount
  id: PurchaseAmount
  parent: Yort.Humm.InStore.ProcessAuthorisationRequest
  langs:
  - csharp
  - vb
  name: PurchaseAmount
  nameWithType: ProcessAuthorisationRequest.PurchaseAmount
  fullName: Yort.Humm.InStore.ProcessAuthorisationRequest.PurchaseAmount
  type: Property
  source:
    remote:
      path: C:/Projects/GitHub/Yort.Humm.InStore/src/ProcessAuthorisationRequest.cs
    id: PurchaseAmount
    path: ProcessAuthorisationRequest.cs
    startLine: 68
  assemblies:
  - Yort.Humm.InStore
  namespace: Yort.Humm.InStore
  summary: "\nRequired. Gets or sets the total purchase amount (including any value paid via Humm).\n"
  remarks: "\n<p>Although the Humm API requires this value to be sent as a number of cents, this library uses a dollar value and will perform the conversion to cents for you.\nFor example, to send $500 set this value to 500.</p>\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("x_purchase_amount")]

      public decimal PurchaseAmount { get; set; }
    parameters: []
    return:
      type: System.Decimal
      description: "\nThe full purchase amount.\n"
    content.vb: >-
      <JsonProperty("x_purchase_amount")>

      Public Property PurchaseAmount As Decimal
  overload: Yort.Humm.InStore.ProcessAuthorisationRequest.PurchaseAmount*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: x_purchase_amount
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.Humm.InStore.ProcessAuthorisationRequest.PurchaseItems
  commentId: P:Yort.Humm.InStore.ProcessAuthorisationRequest.PurchaseItems
  id: PurchaseItems
  parent: Yort.Humm.InStore.ProcessAuthorisationRequest
  langs:
  - csharp
  - vb
  name: PurchaseItems
  nameWithType: ProcessAuthorisationRequest.PurchaseItems
  fullName: Yort.Humm.InStore.ProcessAuthorisationRequest.PurchaseItems
  type: Property
  source:
    remote:
      path: C:/Projects/GitHub/Yort.Humm.InStore/src/ProcessAuthorisationRequest.cs
    id: PurchaseItems
    path: ProcessAuthorisationRequest.cs
    startLine: 81
  assemblies:
  - Yort.Humm.InStore
  namespace: Yort.Humm.InStore
  summary: "\nOptional (may be null). Gets or sets details about what was purchased.\n"
  remarks: "\n<p>This detail may appear on both the seller and customer&apos;s portal when looking at the transaction, providing greater detail about the purchase in that context.</p>\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("purchase_items")]

      public PurchaseItemsCollection PurchaseItems { get; set; }
    parameters: []
    return:
      type: Yort.Humm.InStore.PurchaseItemsCollection
      description: "\nThe purchase items.\n"
    content.vb: >-
      <JsonProperty("purchase_items")>

      Public Property PurchaseItems As PurchaseItemsCollection
  overload: Yort.Humm.InStore.ProcessAuthorisationRequest.PurchaseItems*
  seealso:
  - linkId: Yort.Humm.InStore.PurchaseItemsCollection
    commentId: T:Yort.Humm.InStore.PurchaseItemsCollection
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: purchase_items
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.Humm.InStore.ProcessAuthorisationRequest.BuyerConfirms
  commentId: P:Yort.Humm.InStore.ProcessAuthorisationRequest.BuyerConfirms
  id: BuyerConfirms
  parent: Yort.Humm.InStore.ProcessAuthorisationRequest
  langs:
  - csharp
  - vb
  name: BuyerConfirms
  nameWithType: ProcessAuthorisationRequest.BuyerConfirms
  fullName: Yort.Humm.InStore.ProcessAuthorisationRequest.BuyerConfirms
  type: Property
  source:
    remote:
      path: C:/Projects/GitHub/Yort.Humm.InStore/src/ProcessAuthorisationRequest.cs
    id: BuyerConfirms
    path: ProcessAuthorisationRequest.cs
    startLine: 95
  assemblies:
  - Yort.Humm.InStore
  namespace: Yort.Humm.InStore
  summary: "\nGets or sets a value indicating whether or not the &apos;big things&apos; flow is supported.\n"
  remarks: "\n<p>The &apos;big things&apos; flow occurs when making purchases over a certain dollar limit, determined by Humm, which may require additional \ncredit checks, confirmaton by the customer and so on. In this case the calling system must be prepared to handle pending responses appropriately \nand potentially wait longer to receive an outcome. The default value is false to indicate this is not supported, set to true to indicate it is.</p>\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("buyer_confirms")]

      public bool BuyerConfirms { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: True to indicate the calling system supports and wants to enable the &apos;big things&apos; flow for this transaction.
    content.vb: >-
      <JsonProperty("buyer_confirms")>

      Public Property BuyerConfirms As Boolean
  overload: Yort.Humm.InStore.ProcessAuthorisationRequest.BuyerConfirms*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: buyer_confirms
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.Humm.InStore.ProcessAuthorisationRequest.AutoHandlePendingResponse
  commentId: P:Yort.Humm.InStore.ProcessAuthorisationRequest.AutoHandlePendingResponse
  id: AutoHandlePendingResponse
  parent: Yort.Humm.InStore.ProcessAuthorisationRequest
  langs:
  - csharp
  - vb
  name: AutoHandlePendingResponse
  nameWithType: ProcessAuthorisationRequest.AutoHandlePendingResponse
  fullName: Yort.Humm.InStore.ProcessAuthorisationRequest.AutoHandlePendingResponse
  type: Property
  source:
    remote:
      path: C:/Projects/GitHub/Yort.Humm.InStore/src/ProcessAuthorisationRequest.cs
    id: AutoHandlePendingResponse
    path: ProcessAuthorisationRequest.cs
    startLine: 110
  assemblies:
  - Yort.Humm.InStore
  namespace: Yort.Humm.InStore
  summary: "\nGets or sets a value indicating whether the <xref href=\"Yort.Humm.InStore.HummClient.ProcessAuthorisationAsync(Yort.Humm.InStore.ProcessAuthorisationRequest)\" data-throw-if-not-resolved=\"false\"></xref> automatically handles retries pending status responses.\n"
  remarks: "\n<p>A pending status will only be received if the <xref href=\"Yort.Humm.InStore.ProcessAuthorisationRequest.BuyerConfirms\" data-throw-if-not-resolved=\"false\"></xref> property is true and Humm needs additional time to process the request. In that case, \nif <xref href=\"Yort.Humm.InStore.ProcessAuthorisationRequest.AutoHandlePendingResponse\" data-throw-if-not-resolved=\"false\"></xref> is true the <xref href=\"Yort.Humm.InStore.HummClient\" data-throw-if-not-resolved=\"false\"></xref> instance will raise the <xref href=\"Yort.Humm.InStore.HummClient.PendingAuthorisation\" data-throw-if-not-resolved=\"false\"></xref> event to advise the \ncaller additional time is needed, then wait for the interval specified in the Humm response before retrying the request. This logic will be repeated until Humm returns a final response\nor an error occurs.\n</p>\n<p>If <xref href=\"Yort.Humm.InStore.ProcessAuthorisationRequest.AutoHandlePendingResponse\" data-throw-if-not-resolved=\"false\"></xref> is false and a pending status response is received, it is up to the calling user code to take the appropriate actions.</p>\n"
  example: []
  syntax:
    content: >-
      [JsonIgnore]

      public bool AutoHandlePendingResponse { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: True to have the <xref href="Yort.Humm.InStore.HummClient" data-throw-if-not-resolved="false"></xref> instance handle pending status responses itself, or false to have the calling code handle them.
    content.vb: >-
      <JsonIgnore>

      Public Property AutoHandlePendingResponse As Boolean
  overload: Yort.Humm.InStore.ProcessAuthorisationRequest.AutoHandlePendingResponse*
  attributes:
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.Humm.InStore.ProcessAuthorisationRequest.Validate
  commentId: M:Yort.Humm.InStore.ProcessAuthorisationRequest.Validate
  id: Validate
  parent: Yort.Humm.InStore.ProcessAuthorisationRequest
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: ProcessAuthorisationRequest.Validate()
  fullName: Yort.Humm.InStore.ProcessAuthorisationRequest.Validate()
  type: Method
  source:
    remote:
      path: C:/Projects/GitHub/Yort.Humm.InStore/src/ProcessAuthorisationRequest.cs
    id: Validate
    path: ProcessAuthorisationRequest.cs
    startLine: 123
  assemblies:
  - Yort.Humm.InStore
  namespace: Yort.Humm.InStore
  summary: "\nValidates this request.\n"
  remarks: "\n<p>\nEnsures that <xref href=\"Yort.Humm.InStore.ProcessAuthorisationRequest.ClientTransactionReference\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Yort.Humm.InStore.ProcessAuthorisationRequest.PreapprovalCode\" data-throw-if-not-resolved=\"false\"></xref> are not null, empty string or only whitespace.\nAlso ensure no property is larger than it&apos;s maximum allowed length (see individual property notes for details).\nAlso ensures all base properties are valid, see <xref href=\"Yort.Humm.InStore.Infrastructure.RequestBase.Validate\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n"
  example: []
  syntax:
    content: public override void Validate()
    content.vb: Public Overrides Sub Validate
  overridden: Yort.Humm.InStore.Infrastructure.RequestBase.Validate
  overload: Yort.Humm.InStore.ProcessAuthorisationRequest.Validate*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Yort.Humm.InStore.Infrastructure.RequestBase
  commentId: T:Yort.Humm.InStore.Infrastructure.RequestBase
  parent: Yort.Humm.InStore.Infrastructure
  name: RequestBase
  nameWithType: RequestBase
  fullName: Yort.Humm.InStore.Infrastructure.RequestBase
- uid: Yort.Humm.InStore.ProcessSalesAdjustmentResponse
  commentId: T:Yort.Humm.InStore.ProcessSalesAdjustmentResponse
  name: ProcessSalesAdjustmentResponse
  nameWithType: ProcessSalesAdjustmentResponse
  fullName: Yort.Humm.InStore.ProcessSalesAdjustmentResponse
- uid: Yort.Humm.InStore.HummClient.ProcessAuthorisationAsync(Yort.Humm.InStore.ProcessAuthorisationRequest)
  commentId: M:Yort.Humm.InStore.HummClient.ProcessAuthorisationAsync(Yort.Humm.InStore.ProcessAuthorisationRequest)
  isExternal: true
- uid: Yort.Humm.InStore
  commentId: N:Yort.Humm.InStore
  name: Yort.Humm.InStore
  nameWithType: Yort.Humm.InStore
  fullName: Yort.Humm.InStore
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Yort.Humm.InStore.Infrastructure.RequestBase.MerchantId
  commentId: P:Yort.Humm.InStore.Infrastructure.RequestBase.MerchantId
  parent: Yort.Humm.InStore.Infrastructure.RequestBase
  name: MerchantId
  nameWithType: RequestBase.MerchantId
  fullName: Yort.Humm.InStore.Infrastructure.RequestBase.MerchantId
- uid: Yort.Humm.InStore.Infrastructure.RequestBase.DeviceId
  commentId: P:Yort.Humm.InStore.Infrastructure.RequestBase.DeviceId
  parent: Yort.Humm.InStore.Infrastructure.RequestBase
  name: DeviceId
  nameWithType: RequestBase.DeviceId
  fullName: Yort.Humm.InStore.Infrastructure.RequestBase.DeviceId
- uid: Yort.Humm.InStore.Infrastructure.RequestBase.PosVersion
  commentId: P:Yort.Humm.InStore.Infrastructure.RequestBase.PosVersion
  parent: Yort.Humm.InStore.Infrastructure.RequestBase
  name: PosVersion
  nameWithType: RequestBase.PosVersion
  fullName: Yort.Humm.InStore.Infrastructure.RequestBase.PosVersion
- uid: Yort.Humm.InStore.Infrastructure.RequestBase.OperatorId
  commentId: P:Yort.Humm.InStore.Infrastructure.RequestBase.OperatorId
  parent: Yort.Humm.InStore.Infrastructure.RequestBase
  name: OperatorId
  nameWithType: RequestBase.OperatorId
  fullName: Yort.Humm.InStore.Infrastructure.RequestBase.OperatorId
- uid: Yort.Humm.InStore.Infrastructure.RequestBase.TrackingData
  commentId: P:Yort.Humm.InStore.Infrastructure.RequestBase.TrackingData
  parent: Yort.Humm.InStore.Infrastructure.RequestBase
  name: TrackingData
  nameWithType: RequestBase.TrackingData
  fullName: Yort.Humm.InStore.Infrastructure.RequestBase.TrackingData
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Yort.Humm.InStore.Infrastructure
  commentId: N:Yort.Humm.InStore.Infrastructure
  name: Yort.Humm.InStore.Infrastructure
  nameWithType: Yort.Humm.InStore.Infrastructure
  fullName: Yort.Humm.InStore.Infrastructure
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Yort.Humm.InStore.SendReceiptRequest
  commentId: T:Yort.Humm.InStore.SendReceiptRequest
  parent: Yort.Humm.InStore
  name: SendReceiptRequest
  nameWithType: SendReceiptRequest
  fullName: Yort.Humm.InStore.SendReceiptRequest
- uid: Yort.Humm.InStore.ProcessAuthorisationRequest.BuyerConfirms
  commentId: P:Yort.Humm.InStore.ProcessAuthorisationRequest.BuyerConfirms
  isExternal: true
- uid: Yort.Humm.InStore.RequestStates.Pending
  commentId: F:Yort.Humm.InStore.RequestStates.Pending
  isExternal: true
- uid: Yort.Humm.InStore.ProcessAuthorisationRequest.AutoHandlePendingResponse
  commentId: P:Yort.Humm.InStore.ProcessAuthorisationRequest.AutoHandlePendingResponse
  isExternal: true
- uid: Yort.Humm.InStore.HummClient.PendingAuthorisation
  commentId: E:Yort.Humm.InStore.HummClient.PendingAuthorisation
  isExternal: true
- uid: Yort.Humm.InStore.ProcessAuthorisationRequest.ClientTransactionReference*
  commentId: Overload:Yort.Humm.InStore.ProcessAuthorisationRequest.ClientTransactionReference
  name: ClientTransactionReference
  nameWithType: ProcessAuthorisationRequest.ClientTransactionReference
  fullName: Yort.Humm.InStore.ProcessAuthorisationRequest.ClientTransactionReference
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Yort.Humm.InStore.ProcessAuthorisationRequest.PreapprovalCode*
  commentId: Overload:Yort.Humm.InStore.ProcessAuthorisationRequest.PreapprovalCode
  name: PreapprovalCode
  nameWithType: ProcessAuthorisationRequest.PreapprovalCode
  fullName: Yort.Humm.InStore.ProcessAuthorisationRequest.PreapprovalCode
- uid: Yort.Humm.InStore.ProcessAuthorisationRequest.FinanceAmount*
  commentId: Overload:Yort.Humm.InStore.ProcessAuthorisationRequest.FinanceAmount
  name: FinanceAmount
  nameWithType: ProcessAuthorisationRequest.FinanceAmount
  fullName: Yort.Humm.InStore.ProcessAuthorisationRequest.FinanceAmount
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: Yort.Humm.InStore.ProcessAuthorisationRequest.PurchaseAmount*
  commentId: Overload:Yort.Humm.InStore.ProcessAuthorisationRequest.PurchaseAmount
  name: PurchaseAmount
  nameWithType: ProcessAuthorisationRequest.PurchaseAmount
  fullName: Yort.Humm.InStore.ProcessAuthorisationRequest.PurchaseAmount
- uid: Yort.Humm.InStore.PurchaseItemsCollection
  commentId: T:Yort.Humm.InStore.PurchaseItemsCollection
  parent: Yort.Humm.InStore
  name: PurchaseItemsCollection
  nameWithType: PurchaseItemsCollection
  fullName: Yort.Humm.InStore.PurchaseItemsCollection
- uid: Yort.Humm.InStore.ProcessAuthorisationRequest.PurchaseItems*
  commentId: Overload:Yort.Humm.InStore.ProcessAuthorisationRequest.PurchaseItems
  name: PurchaseItems
  nameWithType: ProcessAuthorisationRequest.PurchaseItems
  fullName: Yort.Humm.InStore.ProcessAuthorisationRequest.PurchaseItems
- uid: Yort.Humm.InStore.ProcessAuthorisationRequest.BuyerConfirms*
  commentId: Overload:Yort.Humm.InStore.ProcessAuthorisationRequest.BuyerConfirms
  name: BuyerConfirms
  nameWithType: ProcessAuthorisationRequest.BuyerConfirms
  fullName: Yort.Humm.InStore.ProcessAuthorisationRequest.BuyerConfirms
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Yort.Humm.InStore.HummClient
  commentId: T:Yort.Humm.InStore.HummClient
  name: HummClient
  nameWithType: HummClient
  fullName: Yort.Humm.InStore.HummClient
- uid: Yort.Humm.InStore.ProcessAuthorisationRequest.AutoHandlePendingResponse*
  commentId: Overload:Yort.Humm.InStore.ProcessAuthorisationRequest.AutoHandlePendingResponse
  name: AutoHandlePendingResponse
  nameWithType: ProcessAuthorisationRequest.AutoHandlePendingResponse
  fullName: Yort.Humm.InStore.ProcessAuthorisationRequest.AutoHandlePendingResponse
- uid: Yort.Humm.InStore.ProcessAuthorisationRequest.ClientTransactionReference
  commentId: P:Yort.Humm.InStore.ProcessAuthorisationRequest.ClientTransactionReference
  isExternal: true
- uid: Yort.Humm.InStore.ProcessAuthorisationRequest.PreapprovalCode
  commentId: P:Yort.Humm.InStore.ProcessAuthorisationRequest.PreapprovalCode
  isExternal: true
- uid: Yort.Humm.InStore.Infrastructure.RequestBase.Validate
  commentId: M:Yort.Humm.InStore.Infrastructure.RequestBase.Validate
  parent: Yort.Humm.InStore.Infrastructure.RequestBase
  name: Validate()
  nameWithType: RequestBase.Validate()
  fullName: Yort.Humm.InStore.Infrastructure.RequestBase.Validate()
  spec.csharp:
  - uid: Yort.Humm.InStore.Infrastructure.RequestBase.Validate
    name: Validate
    nameWithType: RequestBase.Validate
    fullName: Yort.Humm.InStore.Infrastructure.RequestBase.Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Yort.Humm.InStore.Infrastructure.RequestBase.Validate
    name: Validate
    nameWithType: RequestBase.Validate
    fullName: Yort.Humm.InStore.Infrastructure.RequestBase.Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Yort.Humm.InStore.ProcessAuthorisationRequest.Validate*
  commentId: Overload:Yort.Humm.InStore.ProcessAuthorisationRequest.Validate
  name: Validate
  nameWithType: ProcessAuthorisationRequest.Validate
  fullName: Yort.Humm.InStore.ProcessAuthorisationRequest.Validate
