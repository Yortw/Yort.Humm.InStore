### YamlMime:ManagedReference
items:
- uid: Yort.Humm.InStore.RequestStates
  commentId: T:Yort.Humm.InStore.RequestStates
  id: RequestStates
  parent: Yort.Humm.InStore
  children:
  - Yort.Humm.InStore.RequestStates.Cancelled
  - Yort.Humm.InStore.RequestStates.Failed
  - Yort.Humm.InStore.RequestStates.Pending
  - Yort.Humm.InStore.RequestStates.Success
  langs:
  - csharp
  - vb
  name: RequestStates
  nameWithType: RequestStates
  fullName: Yort.Humm.InStore.RequestStates
  type: Class
  source:
    remote:
      path: C:/Projects/GitHub/Yort.Humm.InStore/src/RequestStates.cs
    id: RequestStates
    path: RequestStates.cs
    startLine: 21
  assemblies:
  - Yort.Humm.InStore
  namespace: Yort.Humm.InStore
  summary: "\nProvides a set of constants for possible <xref href=\"Yort.Humm.InStore.Infrastructure.ResponseBase.Status\" data-throw-if-not-resolved=\"false\"></xref> values.\n"
  remarks: "\n<p>See the Humm documentation at <a href=\"https://docs.shophumm.com.au/pos/api_information/status_codes/\"></a>.</p>\n<p>\nThe most common statuses are:\n<ul><li></li><li></li><li></li></ul>\n</p>\n"
  example: []
  syntax:
    content: public static class RequestStates
    content.vb: Public Module RequestStates
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Yort.Humm.InStore.RequestStates.Success
  commentId: F:Yort.Humm.InStore.RequestStates.Success
  id: Success
  parent: Yort.Humm.InStore.RequestStates
  langs:
  - csharp
  - vb
  name: Success
  nameWithType: RequestStates.Success
  fullName: Yort.Humm.InStore.RequestStates.Success
  type: Field
  source:
    remote:
      path: C:/Projects/GitHub/Yort.Humm.InStore/src/RequestStates.cs
    id: Success
    path: RequestStates.cs
    startLine: 26
  assemblies:
  - Yort.Humm.InStore
  namespace: Yort.Humm.InStore
  summary: "\nThe request was succesfully processed and approved.\n"
  example: []
  syntax:
    content: public const string Success = "Success"
    return:
      type: System.String
    content.vb: Public Const Success As String = "Success"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Yort.Humm.InStore.RequestStates.Pending
  commentId: F:Yort.Humm.InStore.RequestStates.Pending
  id: Pending
  parent: Yort.Humm.InStore.RequestStates
  langs:
  - csharp
  - vb
  name: Pending
  nameWithType: RequestStates.Pending
  fullName: Yort.Humm.InStore.RequestStates.Pending
  type: Field
  source:
    remote:
      path: C:/Projects/GitHub/Yort.Humm.InStore/src/RequestStates.cs
    id: Pending
    path: RequestStates.cs
    startLine: 30
  assemblies:
  - Yort.Humm.InStore
  namespace: Yort.Humm.InStore
  summary: "\nThe request is pending and needs more time to be processed. Wait for the specified interval and retry the request.\n"
  example: []
  syntax:
    content: public const string Pending = "Pending"
    return:
      type: System.String
    content.vb: Public Const Pending As String = "Pending"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Yort.Humm.InStore.RequestStates.Cancelled
  commentId: F:Yort.Humm.InStore.RequestStates.Cancelled
  id: Cancelled
  parent: Yort.Humm.InStore.RequestStates
  langs:
  - csharp
  - vb
  name: Cancelled
  nameWithType: RequestStates.Cancelled
  fullName: Yort.Humm.InStore.RequestStates.Cancelled
  type: Field
  source:
    remote:
      path: C:/Projects/GitHub/Yort.Humm.InStore/src/RequestStates.cs
    id: Cancelled
    path: RequestStates.cs
    startLine: 34
  assemblies:
  - Yort.Humm.InStore
  namespace: Yort.Humm.InStore
  summary: "\nThe request was cancelled.\n"
  example: []
  syntax:
    content: public const string Cancelled = "Cancelled"
    return:
      type: System.String
    content.vb: Public Const Cancelled As String = "Cancelled"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Yort.Humm.InStore.RequestStates.Failed
  commentId: F:Yort.Humm.InStore.RequestStates.Failed
  id: Failed
  parent: Yort.Humm.InStore.RequestStates
  langs:
  - csharp
  - vb
  name: Failed
  nameWithType: RequestStates.Failed
  fullName: Yort.Humm.InStore.RequestStates.Failed
  type: Field
  source:
    remote:
      path: C:/Projects/GitHub/Yort.Humm.InStore/src/RequestStates.cs
    id: Failed
    path: RequestStates.cs
    startLine: 38
  assemblies:
  - Yort.Humm.InStore
  namespace: Yort.Humm.InStore
  summary: "\nThe request failed or was declined.\n"
  example: []
  syntax:
    content: public const string Failed = "Failed"
    return:
      type: System.String
    content.vb: Public Const Failed As String = "Failed"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Yort.Humm.InStore.Infrastructure.ResponseBase.Status
  commentId: P:Yort.Humm.InStore.Infrastructure.ResponseBase.Status
  parent: Yort.Humm.InStore.Infrastructure.ResponseBase
  name: Status
  nameWithType: ResponseBase.Status
  fullName: Yort.Humm.InStore.Infrastructure.ResponseBase.Status
- uid: Yort.Humm.InStore
  commentId: N:Yort.Humm.InStore
  name: Yort.Humm.InStore
  nameWithType: Yort.Humm.InStore
  fullName: Yort.Humm.InStore
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Yort.Humm.InStore.Infrastructure.ResponseBase
  commentId: T:Yort.Humm.InStore.Infrastructure.ResponseBase
  parent: Yort.Humm.InStore.Infrastructure
  name: ResponseBase
  nameWithType: ResponseBase
  fullName: Yort.Humm.InStore.Infrastructure.ResponseBase
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Yort.Humm.InStore.Infrastructure
  commentId: N:Yort.Humm.InStore.Infrastructure
  name: Yort.Humm.InStore.Infrastructure
  nameWithType: Yort.Humm.InStore.Infrastructure
  fullName: Yort.Humm.InStore.Infrastructure
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
