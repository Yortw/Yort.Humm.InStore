### YamlMime:ManagedReference
items:
- uid: Yort.Humm.InStore.Infrastructure.ResponseBase
  commentId: T:Yort.Humm.InStore.Infrastructure.ResponseBase
  id: ResponseBase
  parent: Yort.Humm.InStore.Infrastructure
  children:
  - Yort.Humm.InStore.Infrastructure.ResponseBase.Code
  - Yort.Humm.InStore.Infrastructure.ResponseBase.Message
  - Yort.Humm.InStore.Infrastructure.ResponseBase.Signature
  - Yort.Humm.InStore.Infrastructure.ResponseBase.Status
  - Yort.Humm.InStore.Infrastructure.ResponseBase.TrackingData
  - Yort.Humm.InStore.Infrastructure.ResponseBase.VerifySignature(Yort.Humm.InStore.Infrastructure.ISignatureGenerator)
  langs:
  - csharp
  - vb
  name: ResponseBase
  nameWithType: ResponseBase
  fullName: Yort.Humm.InStore.Infrastructure.ResponseBase
  type: Class
  source:
    remote:
      path: C:/Projects/GitHub/Yort.Humm.InStore/src/Infrastructure/ResponseBase.cs
    id: ResponseBase
    path: Infrastructure/ResponseBase.cs
    startLine: 12
  assemblies:
  - Yort.Humm.InStore
  namespace: Yort.Humm.InStore.Infrastructure
  summary: "\nProvides properties common to all Humm responses. \n"
  example: []
  syntax:
    content: public abstract class ResponseBase
    content.vb: Public MustInherit Class ResponseBase
  inheritance:
  - System.Object
  derivedClasses:
  - Yort.Humm.InStore.CreateKeyResponse
  - Yort.Humm.InStore.InviteResponse
  - Yort.Humm.InStore.ProcessAuthorisationResponse
  - Yort.Humm.InStore.ProcessSalesAdjustmentResponse
  - Yort.Humm.InStore.ProcessSalesAdjustmentReversalResponse
  - Yort.Humm.InStore.SendReceiptResponse
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Yort.Humm.InStore.Infrastructure.ResponseBase.Status
  commentId: P:Yort.Humm.InStore.Infrastructure.ResponseBase.Status
  id: Status
  parent: Yort.Humm.InStore.Infrastructure.ResponseBase
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: ResponseBase.Status
  fullName: Yort.Humm.InStore.Infrastructure.ResponseBase.Status
  type: Property
  source:
    remote:
      path: C:/Projects/GitHub/Yort.Humm.InStore/src/Infrastructure/ResponseBase.cs
    id: Status
    path: Infrastructure/ResponseBase.cs
    startLine: 24
  assemblies:
  - Yort.Humm.InStore
  namespace: Yort.Humm.InStore.Infrastructure
  summary: "\nGets or sets the status of the request, used to determine if the request was successful, declined, cancelled or resulted in an error.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("x_status")]

      public string Status { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nA string containig the status of the request.\n"
    content.vb: >-
      <JsonProperty("x_status")>

      Public Property Status As String
  overload: Yort.Humm.InStore.Infrastructure.ResponseBase.Status*
  seealso:
  - linkId: Yort.Humm.InStore.RequestStates
    commentId: T:Yort.Humm.InStore.RequestStates
  - linkId: Yort.Humm.InStore.Infrastructure.ResponseBase.Code
    commentId: P:Yort.Humm.InStore.Infrastructure.ResponseBase.Code
  - linkId: Yort.Humm.InStore.Infrastructure.ResponseBase.Message
    commentId: P:Yort.Humm.InStore.Infrastructure.ResponseBase.Message
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: x_status
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.Humm.InStore.Infrastructure.ResponseBase.Code
  commentId: P:Yort.Humm.InStore.Infrastructure.ResponseBase.Code
  id: Code
  parent: Yort.Humm.InStore.Infrastructure.ResponseBase
  langs:
  - csharp
  - vb
  name: Code
  nameWithType: ResponseBase.Code
  fullName: Yort.Humm.InStore.Infrastructure.ResponseBase.Code
  type: Property
  source:
    remote:
      path: C:/Projects/GitHub/Yort.Humm.InStore/src/Infrastructure/ResponseBase.cs
    id: Code
    path: Infrastructure/ResponseBase.cs
    startLine: 37
  assemblies:
  - Yort.Humm.InStore
  namespace: Yort.Humm.InStore.Infrastructure
  summary: "\nA code providing more details about the <xref href=\"Yort.Humm.InStore.Infrastructure.ResponseBase.Status\" data-throw-if-not-resolved=\"false\"></xref>, suitable for using user code to take programmtic action on or log as a language neutral description of the outcome.\n"
  remarks: "\nSee <a href=\"https://docs.shophumm.com.au/pos/api_information/status_codes/\"></a> for a list of codes returned by Humm.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("x_code")]

      public string Code { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe code returned by Humm.\n"
    content.vb: >-
      <JsonProperty("x_code")>

      Public Property Code As String
  overload: Yort.Humm.InStore.Infrastructure.ResponseBase.Code*
  seealso:
  - linkId: Yort.Humm.InStore.Infrastructure.ResponseBase.Status
    commentId: P:Yort.Humm.InStore.Infrastructure.ResponseBase.Status
  - linkId: Yort.Humm.InStore.Infrastructure.ResponseBase.Message
    commentId: P:Yort.Humm.InStore.Infrastructure.ResponseBase.Message
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: x_code
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.Humm.InStore.Infrastructure.ResponseBase.Message
  commentId: P:Yort.Humm.InStore.Infrastructure.ResponseBase.Message
  id: Message
  parent: Yort.Humm.InStore.Infrastructure.ResponseBase
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: ResponseBase.Message
  fullName: Yort.Humm.InStore.Infrastructure.ResponseBase.Message
  type: Property
  source:
    remote:
      path: C:/Projects/GitHub/Yort.Humm.InStore/src/Infrastructure/ResponseBase.cs
    id: Message
    path: Infrastructure/ResponseBase.cs
    startLine: 45
  assemblies:
  - Yort.Humm.InStore
  namespace: Yort.Humm.InStore.Infrastructure
  summary: "\nGets or sets a human readable message providing more details about the <xref href=\"Yort.Humm.InStore.Infrastructure.ResponseBase.Status\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("x_message")]

      public string Message { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe message.\n"
    content.vb: >-
      <JsonProperty("x_message")>

      Public Property Message As String
  overload: Yort.Humm.InStore.Infrastructure.ResponseBase.Message*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: x_message
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.Humm.InStore.Infrastructure.ResponseBase.TrackingData
  commentId: P:Yort.Humm.InStore.Infrastructure.ResponseBase.TrackingData
  id: TrackingData
  parent: Yort.Humm.InStore.Infrastructure.ResponseBase
  langs:
  - csharp
  - vb
  name: TrackingData
  nameWithType: ResponseBase.TrackingData
  fullName: Yort.Humm.InStore.Infrastructure.ResponseBase.TrackingData
  type: Property
  source:
    remote:
      path: C:/Projects/GitHub/Yort.Humm.InStore/src/Infrastructure/ResponseBase.cs
    id: TrackingData
    path: Infrastructure/ResponseBase.cs
    startLine: 54
  assemblies:
  - Yort.Humm.InStore
  namespace: Yort.Humm.InStore.Infrastructure
  summary: "\nGets the tracking data that was sent with the request that generated this response.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("tracking_data")]

      public Dictionary<string, string> TrackingData { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: "\nA dictionary of strings containing the tracking data.\n"
    content.vb: >-
      <JsonProperty("tracking_data")>

      Public ReadOnly Property TrackingData As Dictionary(Of String, String)
  overload: Yort.Humm.InStore.Infrastructure.ResponseBase.TrackingData*
  seealso:
  - linkId: Yort.Humm.InStore.Infrastructure.RequestBase.TrackingData
    commentId: P:Yort.Humm.InStore.Infrastructure.RequestBase.TrackingData
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: tracking_data
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Yort.Humm.InStore.Infrastructure.ResponseBase.Signature
  commentId: P:Yort.Humm.InStore.Infrastructure.ResponseBase.Signature
  id: Signature
  parent: Yort.Humm.InStore.Infrastructure.ResponseBase
  langs:
  - csharp
  - vb
  name: Signature
  nameWithType: ResponseBase.Signature
  fullName: Yort.Humm.InStore.Infrastructure.ResponseBase.Signature
  type: Property
  source:
    remote:
      path: C:/Projects/GitHub/Yort.Humm.InStore/src/Infrastructure/ResponseBase.cs
    id: Signature
    path: Infrastructure/ResponseBase.cs
    startLine: 63
  assemblies:
  - Yort.Humm.InStore
  namespace: Yort.Humm.InStore.Infrastructure
  summary: "\nGets or sets the signature of this response, used to verify the response is authentic.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("signature")]

      public string Signature { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe signature as a string.\n"
    content.vb: >-
      <JsonProperty("signature")>

      Public Property Signature As String
  overload: Yort.Humm.InStore.Infrastructure.ResponseBase.Signature*
  seealso:
  - linkId: Yort.Humm.InStore.Infrastructure.ResponseBase.VerifySignature(Yort.Humm.InStore.Infrastructure.ISignatureGenerator)
    commentId: M:Yort.Humm.InStore.Infrastructure.ResponseBase.VerifySignature(Yort.Humm.InStore.Infrastructure.ISignatureGenerator)
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: signature
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.Humm.InStore.Infrastructure.ResponseBase.VerifySignature(Yort.Humm.InStore.Infrastructure.ISignatureGenerator)
  commentId: M:Yort.Humm.InStore.Infrastructure.ResponseBase.VerifySignature(Yort.Humm.InStore.Infrastructure.ISignatureGenerator)
  id: VerifySignature(Yort.Humm.InStore.Infrastructure.ISignatureGenerator)
  parent: Yort.Humm.InStore.Infrastructure.ResponseBase
  langs:
  - csharp
  - vb
  name: VerifySignature(ISignatureGenerator)
  nameWithType: ResponseBase.VerifySignature(ISignatureGenerator)
  fullName: Yort.Humm.InStore.Infrastructure.ResponseBase.VerifySignature(Yort.Humm.InStore.Infrastructure.ISignatureGenerator)
  type: Method
  source:
    remote:
      path: C:/Projects/GitHub/Yort.Humm.InStore/src/Infrastructure/ResponseBase.cs
    id: VerifySignature
    path: Infrastructure/ResponseBase.cs
    startLine: 77
  assemblies:
  - Yort.Humm.InStore
  namespace: Yort.Humm.InStore.Infrastructure
  summary: "\nVerifies the signature of this response matches the expected signature using the <xref href=\"Yort.Humm.InStore.Infrastructure.ISignatureGenerator\" data-throw-if-not-resolved=\"false\"></xref> provided. \n"
  remarks: "\n<p>The <xref href=\"Yort.Humm.InStore.HummClient\" data-throw-if-not-resolved=\"false\"></xref> automatically calls this method when a reponse is received, application code does not need to call this method explicitly unless performing it&apos;s own calls without using a <xref href=\"Yort.Humm.InStore.HummClient\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n<p>The <code data-dev-comment-type=\"paramref\" class=\"paramref\">signatureGenerator</code> must have been created/initialised with the same device key as the request that generated this response.</p>\n<p>If the <xref href=\"Yort.Humm.InStore.Infrastructure.ResponseBase.Signature\" data-throw-if-not-resolved=\"false\"></xref> property is null or empty, this call is a no-op and will return without throwing an exception.</p>\n"
  example: []
  syntax:
    content: public void VerifySignature(ISignatureGenerator signatureGenerator)
    parameters:
    - id: signatureGenerator
      type: Yort.Humm.InStore.Infrastructure.ISignatureGenerator
      description: The signature generator to use to confirm the response signature.
    content.vb: Public Sub VerifySignature(signatureGenerator As ISignatureGenerator)
  overload: Yort.Humm.InStore.Infrastructure.ResponseBase.VerifySignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code data-dev-comment-type="paramref" class="paramref">signatureGenerator</code> is null.
  - type: Yort.Humm.InStore.HummResponseSignatureException
    commentId: T:Yort.Humm.InStore.HummResponseSignatureException
    description: Thrown if the signature of the response does not match the expected signature.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Yort.Humm.InStore.Infrastructure
  commentId: N:Yort.Humm.InStore.Infrastructure
  name: Yort.Humm.InStore.Infrastructure
  nameWithType: Yort.Humm.InStore.Infrastructure
  fullName: Yort.Humm.InStore.Infrastructure
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Yort.Humm.InStore.RequestStates
  commentId: T:Yort.Humm.InStore.RequestStates
  name: RequestStates
  nameWithType: RequestStates
  fullName: Yort.Humm.InStore.RequestStates
- uid: Yort.Humm.InStore.Infrastructure.ResponseBase.Code
  commentId: P:Yort.Humm.InStore.Infrastructure.ResponseBase.Code
  parent: Yort.Humm.InStore.Infrastructure.ResponseBase
  name: Code
  nameWithType: ResponseBase.Code
  fullName: Yort.Humm.InStore.Infrastructure.ResponseBase.Code
- uid: Yort.Humm.InStore.Infrastructure.ResponseBase.Message
  commentId: P:Yort.Humm.InStore.Infrastructure.ResponseBase.Message
  parent: Yort.Humm.InStore.Infrastructure.ResponseBase
  name: Message
  nameWithType: ResponseBase.Message
  fullName: Yort.Humm.InStore.Infrastructure.ResponseBase.Message
- uid: Yort.Humm.InStore.Infrastructure.ResponseBase.Status*
  commentId: Overload:Yort.Humm.InStore.Infrastructure.ResponseBase.Status
  name: Status
  nameWithType: ResponseBase.Status
  fullName: Yort.Humm.InStore.Infrastructure.ResponseBase.Status
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Yort.Humm.InStore.Infrastructure.ResponseBase
  commentId: T:Yort.Humm.InStore.Infrastructure.ResponseBase
  parent: Yort.Humm.InStore.Infrastructure
  name: ResponseBase
  nameWithType: ResponseBase
  fullName: Yort.Humm.InStore.Infrastructure.ResponseBase
- uid: Yort.Humm.InStore.Infrastructure.ResponseBase.Status
  commentId: P:Yort.Humm.InStore.Infrastructure.ResponseBase.Status
  parent: Yort.Humm.InStore.Infrastructure.ResponseBase
  name: Status
  nameWithType: ResponseBase.Status
  fullName: Yort.Humm.InStore.Infrastructure.ResponseBase.Status
- uid: Yort.Humm.InStore.Infrastructure.ResponseBase.Code*
  commentId: Overload:Yort.Humm.InStore.Infrastructure.ResponseBase.Code
  name: Code
  nameWithType: ResponseBase.Code
  fullName: Yort.Humm.InStore.Infrastructure.ResponseBase.Code
- uid: Yort.Humm.InStore.Infrastructure.ResponseBase.Message*
  commentId: Overload:Yort.Humm.InStore.Infrastructure.ResponseBase.Message
  name: Message
  nameWithType: ResponseBase.Message
  fullName: Yort.Humm.InStore.Infrastructure.ResponseBase.Message
- uid: Yort.Humm.InStore.Infrastructure.RequestBase.TrackingData
  commentId: P:Yort.Humm.InStore.Infrastructure.RequestBase.TrackingData
  parent: Yort.Humm.InStore.Infrastructure.RequestBase
  name: TrackingData
  nameWithType: RequestBase.TrackingData
  fullName: Yort.Humm.InStore.Infrastructure.RequestBase.TrackingData
- uid: Yort.Humm.InStore.Infrastructure.ResponseBase.TrackingData*
  commentId: Overload:Yort.Humm.InStore.Infrastructure.ResponseBase.TrackingData
  name: TrackingData
  nameWithType: ResponseBase.TrackingData
  fullName: Yort.Humm.InStore.Infrastructure.ResponseBase.TrackingData
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Yort.Humm.InStore.Infrastructure.RequestBase
  commentId: T:Yort.Humm.InStore.Infrastructure.RequestBase
  parent: Yort.Humm.InStore.Infrastructure
  name: RequestBase
  nameWithType: RequestBase
  fullName: Yort.Humm.InStore.Infrastructure.RequestBase
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Yort.Humm.InStore.Infrastructure.ResponseBase.VerifySignature(Yort.Humm.InStore.Infrastructure.ISignatureGenerator)
  commentId: M:Yort.Humm.InStore.Infrastructure.ResponseBase.VerifySignature(Yort.Humm.InStore.Infrastructure.ISignatureGenerator)
  parent: Yort.Humm.InStore.Infrastructure.ResponseBase
  name: VerifySignature(ISignatureGenerator)
  nameWithType: ResponseBase.VerifySignature(ISignatureGenerator)
  fullName: Yort.Humm.InStore.Infrastructure.ResponseBase.VerifySignature(Yort.Humm.InStore.Infrastructure.ISignatureGenerator)
  spec.csharp:
  - uid: Yort.Humm.InStore.Infrastructure.ResponseBase.VerifySignature(Yort.Humm.InStore.Infrastructure.ISignatureGenerator)
    name: VerifySignature
    nameWithType: ResponseBase.VerifySignature
    fullName: Yort.Humm.InStore.Infrastructure.ResponseBase.VerifySignature
  - name: (
    nameWithType: (
    fullName: (
  - uid: Yort.Humm.InStore.Infrastructure.ISignatureGenerator
    name: ISignatureGenerator
    nameWithType: ISignatureGenerator
    fullName: Yort.Humm.InStore.Infrastructure.ISignatureGenerator
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Yort.Humm.InStore.Infrastructure.ResponseBase.VerifySignature(Yort.Humm.InStore.Infrastructure.ISignatureGenerator)
    name: VerifySignature
    nameWithType: ResponseBase.VerifySignature
    fullName: Yort.Humm.InStore.Infrastructure.ResponseBase.VerifySignature
  - name: (
    nameWithType: (
    fullName: (
  - uid: Yort.Humm.InStore.Infrastructure.ISignatureGenerator
    name: ISignatureGenerator
    nameWithType: ISignatureGenerator
    fullName: Yort.Humm.InStore.Infrastructure.ISignatureGenerator
  - name: )
    nameWithType: )
    fullName: )
- uid: Yort.Humm.InStore.Infrastructure.ResponseBase.Signature*
  commentId: Overload:Yort.Humm.InStore.Infrastructure.ResponseBase.Signature
  name: Signature
  nameWithType: ResponseBase.Signature
  fullName: Yort.Humm.InStore.Infrastructure.ResponseBase.Signature
- uid: Yort.Humm.InStore.Infrastructure.ISignatureGenerator
  commentId: T:Yort.Humm.InStore.Infrastructure.ISignatureGenerator
  parent: Yort.Humm.InStore.Infrastructure
  name: ISignatureGenerator
  nameWithType: ISignatureGenerator
  fullName: Yort.Humm.InStore.Infrastructure.ISignatureGenerator
- uid: Yort.Humm.InStore.HummClient
  commentId: T:Yort.Humm.InStore.HummClient
  name: HummClient
  nameWithType: HummClient
  fullName: Yort.Humm.InStore.HummClient
- uid: Yort.Humm.InStore.Infrastructure.ResponseBase.Signature
  commentId: P:Yort.Humm.InStore.Infrastructure.ResponseBase.Signature
  parent: Yort.Humm.InStore.Infrastructure.ResponseBase
  name: Signature
  nameWithType: ResponseBase.Signature
  fullName: Yort.Humm.InStore.Infrastructure.ResponseBase.Signature
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: Yort.Humm.InStore.HummResponseSignatureException
  commentId: T:Yort.Humm.InStore.HummResponseSignatureException
  name: HummResponseSignatureException
  nameWithType: HummResponseSignatureException
  fullName: Yort.Humm.InStore.HummResponseSignatureException
- uid: Yort.Humm.InStore.Infrastructure.ResponseBase.VerifySignature*
  commentId: Overload:Yort.Humm.InStore.Infrastructure.ResponseBase.VerifySignature
  name: VerifySignature
  nameWithType: ResponseBase.VerifySignature
  fullName: Yort.Humm.InStore.Infrastructure.ResponseBase.VerifySignature
