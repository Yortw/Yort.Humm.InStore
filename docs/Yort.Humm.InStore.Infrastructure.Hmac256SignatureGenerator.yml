### YamlMime:ManagedReference
items:
- uid: Yort.Humm.InStore.Infrastructure.Hmac256SignatureGenerator
  commentId: T:Yort.Humm.InStore.Infrastructure.Hmac256SignatureGenerator
  id: Hmac256SignatureGenerator
  parent: Yort.Humm.InStore.Infrastructure
  children:
  - Yort.Humm.InStore.Infrastructure.Hmac256SignatureGenerator.#ctor(System.String)
  - Yort.Humm.InStore.Infrastructure.Hmac256SignatureGenerator.Dispose
  - Yort.Humm.InStore.Infrastructure.Hmac256SignatureGenerator.GenerateSignature(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})
  langs:
  - csharp
  - vb
  name: Hmac256SignatureGenerator
  nameWithType: Hmac256SignatureGenerator
  fullName: Yort.Humm.InStore.Infrastructure.Hmac256SignatureGenerator
  type: Class
  source:
    remote:
      path: C:/Projects/GitHub/Yort.Humm.InStore/src/Infrastructure/Hmac256SignatureGenerator.cs
    id: Hmac256SignatureGenerator
    path: Infrastructure/Hmac256SignatureGenerator.cs
    startLine: 13
  assemblies:
  - Yort.Humm.InStore
  namespace: Yort.Humm.InStore.Infrastructure
  summary: "\nUsed to generate signatures using the <xref href=\"System.Security.Cryptography.HMACSHA256\" data-throw-if-not-resolved=\"false\"></xref> hash algorithm, currently the default and only supported algorithm by Humm.\n"
  example: []
  syntax:
    content: 'public sealed class Hmac256SignatureGenerator : ISignatureGenerator, IDisposable'
    content.vb: >-
      Public NotInheritable Class Hmac256SignatureGenerator
          Implements ISignatureGenerator, IDisposable
  seealso:
  - linkId: Yort.Humm.InStore.Infrastructure.ISignatureGenerator
    commentId: T:Yort.Humm.InStore.Infrastructure.ISignatureGenerator
  inheritance:
  - System.Object
  implements:
  - Yort.Humm.InStore.Infrastructure.ISignatureGenerator
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Yort.Humm.InStore.Infrastructure.Hmac256SignatureGenerator.#ctor(System.String)
  commentId: M:Yort.Humm.InStore.Infrastructure.Hmac256SignatureGenerator.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Yort.Humm.InStore.Infrastructure.Hmac256SignatureGenerator
  langs:
  - csharp
  - vb
  name: Hmac256SignatureGenerator(String)
  nameWithType: Hmac256SignatureGenerator.Hmac256SignatureGenerator(String)
  fullName: Yort.Humm.InStore.Infrastructure.Hmac256SignatureGenerator.Hmac256SignatureGenerator(System.String)
  type: Constructor
  source:
    remote:
      path: C:/Projects/GitHub/Yort.Humm.InStore/src/Infrastructure/Hmac256SignatureGenerator.cs
    id: .ctor
    path: Infrastructure/Hmac256SignatureGenerator.cs
    startLine: 21
  assemblies:
  - Yort.Humm.InStore
  namespace: Yort.Humm.InStore.Infrastructure
  summary: "\nInitializes a new instance of the <xref href=\"Yort.Humm.InStore.Infrastructure.Hmac256SignatureGenerator\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public Hmac256SignatureGenerator([ValidatedNotNull] string apiKey)
    parameters:
    - id: apiKey
      type: System.String
      description: The secret key to use when generating the signature. This should be a Humm Device Key (<xref href="Yort.Humm.InStore.HummClientConfiguration.DeviceKey" data-throw-if-not-resolved="false"></xref>).
      attributes:
      - type: Ladon.ValidatedNotNullAttribute
        ctor: Ladon.ValidatedNotNullAttribute.#ctor
        arguments: []
    content.vb: Public Sub New(apiKey As String)
  overload: Yort.Humm.InStore.Infrastructure.Hmac256SignatureGenerator.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Yort.Humm.InStore.Infrastructure.Hmac256SignatureGenerator.GenerateSignature(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})
  commentId: M:Yort.Humm.InStore.Infrastructure.Hmac256SignatureGenerator.GenerateSignature(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})
  id: GenerateSignature(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})
  parent: Yort.Humm.InStore.Infrastructure.Hmac256SignatureGenerator
  langs:
  - csharp
  - vb
  name: GenerateSignature(IEnumerable<KeyValuePair<String, Object>>)
  nameWithType: Hmac256SignatureGenerator.GenerateSignature(IEnumerable<KeyValuePair<String, Object>>)
  fullName: Yort.Humm.InStore.Infrastructure.Hmac256SignatureGenerator.GenerateSignature(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.Object>>)
  type: Method
  source:
    remote:
      path: C:/Projects/GitHub/Yort.Humm.InStore/src/Infrastructure/Hmac256SignatureGenerator.cs
    id: GenerateSignature
    path: Infrastructure/Hmac256SignatureGenerator.cs
    startLine: 43
  assemblies:
  - Yort.Humm.InStore
  namespace: Yort.Humm.InStore.Infrastructure
  summary: "\nGenerates the signature and returns it as a string.\n"
  remarks: "\n<p>Humm signatures are currently case-insensitive hexadecimal strings.</p>\n<p>Only values from the <code data-dev-comment-type=\"paramref\" class=\"paramref\">properties</code> argument where the key starts with &quot;x_&quot; will be used, so the caller may pass the full property set if desired.\nValues of type decimal are treated as dollar values and will be automatically multiplied by 100, so should be passed as their decimal dollar representation.\nValues that are null will be ignored (treated as a missing/undeclared property and excluded from the signature generation).\n</p>\n"
  example: []
  syntax:
    content: public string GenerateSignature(IEnumerable<KeyValuePair<string, object>> properties)
    parameters:
    - id: properties
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
      description: A dictionary of values to be considered for use in the signature generation. See remarks for more details.
    return:
      type: System.String
      description: "\nA string containing the signature calculated from the properties provided.\n"
    content.vb: Public Function GenerateSignature(properties As IEnumerable(Of KeyValuePair(Of String, Object))) As String
  overload: Yort.Humm.InStore.Infrastructure.Hmac256SignatureGenerator.GenerateSignature*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: Hmac256SignatureGenerator
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code data-dev-comment-type="paramref" class="paramref">properties</code> is null.
  implements:
  - Yort.Humm.InStore.Infrastructure.ISignatureGenerator.GenerateSignature(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})
  nameWithType.vb: Hmac256SignatureGenerator.GenerateSignature(IEnumerable(Of KeyValuePair(Of String, Object)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Yort.Humm.InStore.Infrastructure.Hmac256SignatureGenerator.GenerateSignature(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.Object)))
  name.vb: GenerateSignature(IEnumerable(Of KeyValuePair(Of String, Object)))
- uid: Yort.Humm.InStore.Infrastructure.Hmac256SignatureGenerator.Dispose
  commentId: M:Yort.Humm.InStore.Infrastructure.Hmac256SignatureGenerator.Dispose
  id: Dispose
  parent: Yort.Humm.InStore.Infrastructure.Hmac256SignatureGenerator
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: Hmac256SignatureGenerator.Dispose()
  fullName: Yort.Humm.InStore.Infrastructure.Hmac256SignatureGenerator.Dispose()
  type: Method
  source:
    remote:
      path: C:/Projects/GitHub/Yort.Humm.InStore/src/Infrastructure/Hmac256SignatureGenerator.cs
    id: Dispose
    path: Infrastructure/Hmac256SignatureGenerator.cs
    startLine: 99
  assemblies:
  - Yort.Humm.InStore
  namespace: Yort.Humm.InStore.Infrastructure
  summary: "\nPerforms application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.\n"
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Yort.Humm.InStore.Infrastructure.Hmac256SignatureGenerator.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Security.Cryptography.HMACSHA256
  commentId: T:System.Security.Cryptography.HMACSHA256
  isExternal: true
- uid: Yort.Humm.InStore.Infrastructure.ISignatureGenerator
  commentId: T:Yort.Humm.InStore.Infrastructure.ISignatureGenerator
  parent: Yort.Humm.InStore.Infrastructure
  name: ISignatureGenerator
  nameWithType: ISignatureGenerator
  fullName: Yort.Humm.InStore.Infrastructure.ISignatureGenerator
- uid: Yort.Humm.InStore.Infrastructure
  commentId: N:Yort.Humm.InStore.Infrastructure
  name: Yort.Humm.InStore.Infrastructure
  nameWithType: Yort.Humm.InStore.Infrastructure
  fullName: Yort.Humm.InStore.Infrastructure
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Yort.Humm.InStore.Infrastructure.Hmac256SignatureGenerator
  commentId: T:Yort.Humm.InStore.Infrastructure.Hmac256SignatureGenerator
  name: Hmac256SignatureGenerator
  nameWithType: Hmac256SignatureGenerator
  fullName: Yort.Humm.InStore.Infrastructure.Hmac256SignatureGenerator
- uid: Yort.Humm.InStore.HummClientConfiguration.DeviceKey
  commentId: P:Yort.Humm.InStore.HummClientConfiguration.DeviceKey
  isExternal: true
- uid: Yort.Humm.InStore.Infrastructure.Hmac256SignatureGenerator.#ctor*
  commentId: Overload:Yort.Humm.InStore.Infrastructure.Hmac256SignatureGenerator.#ctor
  name: Hmac256SignatureGenerator
  nameWithType: Hmac256SignatureGenerator.Hmac256SignatureGenerator
  fullName: Yort.Humm.InStore.Infrastructure.Hmac256SignatureGenerator.Hmac256SignatureGenerator
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ObjectDisposedException
  commentId: T:System.ObjectDisposedException
  isExternal: true
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: Yort.Humm.InStore.Infrastructure.Hmac256SignatureGenerator.GenerateSignature*
  commentId: Overload:Yort.Humm.InStore.Infrastructure.Hmac256SignatureGenerator.GenerateSignature
  name: GenerateSignature
  nameWithType: Hmac256SignatureGenerator.GenerateSignature
  fullName: Yort.Humm.InStore.Infrastructure.Hmac256SignatureGenerator.GenerateSignature
- uid: Yort.Humm.InStore.Infrastructure.ISignatureGenerator.GenerateSignature(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})
  commentId: M:Yort.Humm.InStore.Infrastructure.ISignatureGenerator.GenerateSignature(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})
  parent: Yort.Humm.InStore.Infrastructure.ISignatureGenerator
  isExternal: true
  name: GenerateSignature(IEnumerable<KeyValuePair<String, Object>>)
  nameWithType: ISignatureGenerator.GenerateSignature(IEnumerable<KeyValuePair<String, Object>>)
  fullName: Yort.Humm.InStore.Infrastructure.ISignatureGenerator.GenerateSignature(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.Object>>)
  nameWithType.vb: ISignatureGenerator.GenerateSignature(IEnumerable(Of KeyValuePair(Of String, Object)))
  fullName.vb: Yort.Humm.InStore.Infrastructure.ISignatureGenerator.GenerateSignature(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.Object)))
  name.vb: GenerateSignature(IEnumerable(Of KeyValuePair(Of String, Object)))
  spec.csharp:
  - uid: Yort.Humm.InStore.Infrastructure.ISignatureGenerator.GenerateSignature(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})
    name: GenerateSignature
    nameWithType: ISignatureGenerator.GenerateSignature
    fullName: Yort.Humm.InStore.Infrastructure.ISignatureGenerator.GenerateSignature
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Yort.Humm.InStore.Infrastructure.ISignatureGenerator.GenerateSignature(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})
    name: GenerateSignature
    nameWithType: ISignatureGenerator.GenerateSignature
    fullName: Yort.Humm.InStore.Infrastructure.ISignatureGenerator.GenerateSignature
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<String, Object>>
  nameWithType: IEnumerable<KeyValuePair<String, Object>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.Object>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of String, Object))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.Object))
  name.vb: IEnumerable(Of KeyValuePair(Of String, Object))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Yort.Humm.InStore.Infrastructure.Hmac256SignatureGenerator.Dispose*
  commentId: Overload:Yort.Humm.InStore.Infrastructure.Hmac256SignatureGenerator.Dispose
  name: Dispose
  nameWithType: Hmac256SignatureGenerator.Dispose
  fullName: Yort.Humm.InStore.Infrastructure.Hmac256SignatureGenerator.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
