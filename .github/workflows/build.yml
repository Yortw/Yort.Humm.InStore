name: Yort.Humm.Instore.Build

on: 
  push:
    branches: master
    tags: '**'
  pull_request:

jobs:
  build:

    runs-on: windows-latest
    env:
      Humm_Test_Sandbox_DeviceKey: ${{ secrets.Test_Sandbox_DeviceKey }}    
      Humm_Test_Sandbox_MerchantId: ${{ secrets.Test_Sandbox_MerchantId }}    
      Humm_Test_Sandbox_DeviceId: ${{ secrets.Test_Sandbox_DeviceId }}    
      Humm_Test_Sandbox_DeviceRegistrationKey: ${{ secrets.Test_Sandbox_DeviceRegistrationKey }}    
      Humm_Test_Sandbox_NewDeviceId: ${{ secrets.Test_Sandbox_NewDeviceId }}    

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.0.101
    - name: Build with dotnet (src\Yort.Humm.InStore.sln)
      run: dotnet build src\Yort.Humm.InStore.sln --configuration Release
    - name: Run Tests
      run: dotnet test src\Yort.Humm.InStore.sln --verbosity normal

  pack:
    env:
      Version: $(git describe --tags --dirty)
    runs-on: windows-latest
    needs: build
    if: github.event_name == 'push'
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.0.101
    - name: Determine version
      run: "$Env:Version=$(git describe --tags --dirty)"
    - name: Echo Version
      run: "echo $Env:Version"
    - name: Pack
      run: dotnet pack src\Yort.Humm.InStore.sln --output ./artifacts --configuration Release -p:PackageVersion=$Env:VERSION
    - uses: actions/upload-artifact@v1
      with:
        name: artifacts
        path: ./artifacts

  publish:
    runs-on: windows-latest
    needs: pack
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps: 
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.0.101
    - uses: actions/download-artifact@v1
      with:
        name: artifacts
        path: ./artifacts
    - name: Publish packages
      run: dotnet nuget push ./artifacts/**.nupkg --source nuget.org --api-key ${{secrets.NUGET_TOKEN}}
